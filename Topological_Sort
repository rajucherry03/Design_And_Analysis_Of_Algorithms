#include<stdio.h>
#include<stdlib.h>
 
int a[20][20],n,visited[20],res[20],k=0;
void dfs(int u)
{ 
 
    int v;
    visited[u]=1;
    for (v =0;v<n;v++)
    {
        
        if(a[u][v]==1 && visited[v]==0)
        {
			dfs(v);
        }
    }
    k++;
    res[k]=u;
}
void topological_order()
{ 
 
    int i;
    k=0;
    for (i = 0; i < n; i++)
    {
        visited[i]=0;
    }
    for (i=0;i < n; i++) 
    {
        if (visited[i] == 0) 
		{
            dfs(i);
        }
    }
    return;
}
int main() {
    int u,v,i,j;
    printf("Enter number of vertices\n"); 
    scanf("%d", &n);
	printf("Enter the edges give -1 -1 to stop");
	while(1)
	{
		scanf("%d %d",&u,&v);
		if (u==-1)
			break;
		else
			a[u][v]=1;
	}
	
 
    printf("Adjacency Matrix of the graph\n");
    for (i = 0; i < n; i++) 
    {
        for (j = 0; j < n; j++) 
        {
            printf("\t%d", a[i][j]);
        }
        printf("\n");
    }
    topological_order();
    printf("\nTopological order:\n");
    for (i = n; i >= 1; i--) 
    {
        printf("-->%d", res[i]);
    }
    return 0;
}
